{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red35\green46\blue57;\red255\green255\blue255;\red62\green62\blue62;
\red21\green163\blue221;\red14\green32\blue46;\red245\green245\blue246;}
{\*\expandedcolortbl;;\cssrgb\c18039\c23922\c28627;\cssrgb\c100000\c100000\c100000;\cssrgb\c30980\c30980\c30980;
\cssrgb\c784\c70196\c89412;\cssrgb\c5882\c16863\c23922;\cssrgb\c96863\c96863\c97255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
WHERE clause\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1\b0\fs32 \cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Data Modeling in Apache Cassandra is query focused, and that focus needs to be on the WHERE clause\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf4 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Failure to include a WHERE clause will result in an error\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 \cb3 Additional Resource\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf4 \cb3 AVOID using "ALLOW FILTERING": Here is a reference {\field{\*\fldinst{HYPERLINK "https://www.datastax.com/dev/blog/allow-filtering-explained-2"}}{\fldrslt 
\f0\b \cf5 in DataStax}} that explains ALLOW FILTERING and why you should not use it.\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs36 \cf2 \cb3 Commonly Asked Questions:\cb1 \
\pard\pardeftab720\partightenfactor0

\fs32 \cf4 \cb3 Why do we need to use a 
\f2\fs28\fsmilli14400 \cf6 \cb7 \uc0\u8237 WHERE
\f0\fs32 \cf4 \cb3 \uc0\u8236  statement since we are not concerned about analytics? Is it only for debugging purposes?
\f1\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 The 
\f3\fs28\fsmilli14400 \cf6 \cb7 \uc0\u8237 WHERE
\f1\fs32 \cf4 \cb3 \uc0\u8236  statement is allowing us to do the fast reads. With Apache Cassandra, we are talking about big data -- think terabytes of data -- so we are making it fast for read purposes. Data is spread across all the nodes. By using the 
\f3\fs28\fsmilli14400 \cf6 \cb7 \uc0\u8237 WHERE
\f1\fs32 \cf4 \cb3 \uc0\u8236  statement, we know which node to go to, from which node to get that data and serve it back. For example, imagine we have 10 years of data on 10 nodes or servers. So 1 year's data is on a separate node. By using the 
\f3\fs28\fsmilli14400 \cf6 \cb7 \uc0\u8237 WHERE year = 1
\f1\fs32 \cf4 \cb3 \uc0\u8236  statement we know which node to visit fast to pull the data from.}