{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 Helvetica-Oblique;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red35\green46\blue57;\red255\green255\blue255;\red62\green62\blue62;
\red14\green32\blue46;\red245\green245\blue246;}
{\*\expandedcolortbl;;\cssrgb\c18039\c23922\c28627;\cssrgb\c100000\c100000\c100000;\cssrgb\c30980\c30980\c30980;
\cssrgb\c5882\c16863\c23922;\cssrgb\c96863\c96863\c97255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\sa100\partightenfactor0

\f0\b\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Partitioning\
\pard\pardeftab720\sl373\sa100\partightenfactor0

\fs28 \cf4 \strokec4 Schedule partitioning\
\pard\pardeftab720\sl540\sa300\partightenfactor0

\f1\b0\fs32 \cf4 Not only are schedules great for reducing the amount of data our pipelines have to process, but they also help us guarantee that we can meet timing guarantees that our data consumers may need.\
\pard\pardeftab720\sl373\sa100\partightenfactor0

\f0\b\fs28 \cf4 Logical partitioning\
\pard\pardeftab720\sl540\sa300\partightenfactor0

\f1\b0\fs32 \cf4 Conceptually related data can be partitioned into discrete segments and processed separately. This process of separating data based on its conceptual relationship is called logical partitioning. With logical partitioning, unrelated things belong in separate steps. Consider your dependencies and separate processing around those boundaries.\
Also worth mentioning, the data\'a0
\f2\i location
\f1\i0 \'a0is another form of logical partitioning. For example, if our data is stored in a key-value store like Amazon's S3 in a format such as:\'a0
\f3\fs28\fsmilli14400 \cf5 \cb6 \strokec5 \uc0\u8237 s3://<bucket>/<year>/<month>/<day>
\f1\fs32 \cf4 \cb3 \strokec4 \uc0\u8236 \'a0we could say that our date is logically partitioned by time.\
\pard\pardeftab720\sl373\sa100\partightenfactor0

\f0\b\fs28 \cf4 Size Partitioning\
\pard\pardeftab720\sl540\partightenfactor0

\f1\b0\fs32 \cf4 Size partitioning separates data for processing based on desired or required storage limits. This essentially sets the amount of data included in a data pipeline run. Size partitioning is critical to understand when working with large datasets, especially with Airflow.\
}