{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fmodern\fcharset0 Courier;
\f3\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red62\green62\blue62;\red255\green255\blue255;\red14\green32\blue46;
\red245\green245\blue246;\red38\green38\blue38;\red210\green0\blue53;}
{\*\expandedcolortbl;;\cssrgb\c30980\c30980\c30980;\cssrgb\c100000\c100000\c100000;\cssrgb\c5882\c16863\c23922;
\cssrgb\c96863\c96863\c97255;\cssrgb\c20000\c20000\c20000;\cssrgb\c86667\c6667\c26667;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid2\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl540\sa300\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'a0executed until it is needed. The\'a0
\f1\b action
\f0\b0 \'a0functions trigger the lazily evaluated functions.\
For example,\
\pard\pardeftab720\sl420\partightenfactor0

\f2 \cf4 \cb5 \strokec4 \uc0\u8237 df = spark.
\f3\b \cf6 \strokec6 read
\f2\b0 \cf4 \strokec4 .load(\cf7 \strokec7 "some csv file"\cf4 \strokec4 )\uc0\u8236 \
df1 = df.
\f3\b \cf6 \strokec6 select
\f2\b0 \cf4 \strokec4 (\cf7 \strokec7 "some column"\cf4 \strokec4 ).filter(\cf7 \strokec7 "some condition"\cf4 \strokec4 )\uc0\u8236 \
df1.
\f3\b \cf6 \strokec6 write
\f2\b0 \cf4 \strokec4 (\cf7 \strokec7 "to path"\cf4 \strokec4 )\uc0\u8236 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\partightenfactor0
\ls1\ilvl0
\f0\fs24 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \uc0\u8236 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In this code,\'a0
\f2 \cf4 \cb5 \strokec4 \uc0\u8237 select
\f0 \cf2 \cb3 \strokec2 \uc0\u8236 \'a0and\'a0
\f2 \cf4 \cb5 \strokec4 \uc0\u8237 filter
\f0 \cf2 \cb3 \strokec2 \uc0\u8236 \'a0are\'a0
\f1\b transformation functions
\f0\b0 , and\'a0
\f2 \cf4 \cb5 \strokec4 \uc0\u8237 write
\f0 \cf2 \cb3 \strokec2 \uc0\u8236 \'a0is an\'a0
\f1\b action function
\f0\b0 .\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If you execute this code line by line, the second line will be loaded, but you\'a0
\f1\b will not see the function being executed in your Spark UI
\f0\b0 .\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 When you actually\'a0
\f1\b execute using action
\f0\b0 \'a0
\f2 \cf4 \cb5 \strokec4 \uc0\u8237 write
\f0 \cf2 \cb3 \strokec2 \uc0\u8236 , then you will see your Spark program being executed:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl400\partightenfactor0
\ls1\ilvl1
\f2 \cf4 \cb5 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \uc0\u8237 select
\f0 \cf2 \cb3 \strokec2 \uc0\u8236 \'a0-->\'a0
\f2 \cf4 \cb5 \strokec4 \uc0\u8237 filter
\f0 \cf2 \cb3 \strokec2 \uc0\u8236 \'a0-->\'a0
\f2 \cf4 \cb5 \strokec4 \uc0\u8237 write
\f0 \cf2 \cb3 \strokec2 \uc0\u8236 \'a0chained in Spark UI\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl400\partightenfactor0
\ls1\ilvl1\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 but you will only see\'a0
\f2 \cf4 \cb5 \strokec4 \uc0\u8237 Write
\f0 \cf2 \cb3 \strokec2 \uc0\u8236 show up under your tasks.\cb1 \
\pard\pardeftab720\sl540\partightenfactor0

\fs32 \cf2 \cb3 This is significant because you can chain your\'a0
\f1\b RDD
\f0\b0 \'a0or dataframe as much as you want, but it might not do anything until you actually\'a0
\f1\b trigger
\f0\b0 \'a0with some\'a0
\f1\b action words
\f0\b0 . And if you have lengthy\'a0
\f1\b transformations
\f0\b0 , then it might take your executors quite some time to complete all the tasks.\
}